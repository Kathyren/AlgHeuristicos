La cantidad de feromonas  es por default

aristas [i][j]feromonas = feromoIni
La solucion inicla es un valor fijo tambien

A todas las artistas un valor fijo (0.5)

for (0:48)
	for (0:48)
	aristas [i][j]feromonas = feromoIni
todas tienen la misma probabilidad, el primer camino no se calcula la feromona




-------------------------------------------------
Las soluciones,el contructor, no genera caminos
	soluciones[k]=new solucion

for (k0:M)
	construyesolucion
	optLocal
	calcular_aptitud
	if (mejor ==null)
		mejor soluciones[k].copia
		mejor.desplegar
	if es el mejor hasta ahora
		mejor= soluciones'k
		.copia
for
	aritsas[mejor.camino[i]][mejor.camino[i+1]].feromonas += d/mejor.apitidu;   <- deposito de feromonas de acuerdo a la mejor solucion.
	aquellas aristas donde paso la mejor solucion. La cantidad es d una constante entre la aptitud de todas la solucion
aristas[mejor.camino[N-1]][mejor.camino[0][mejor.camino[N-1]].feromonas +d/mejor.aptidud  <-del utlimoa al primero
for
	for
	aritsas[mejor.camino[i]][mejor.camino[i+1]].feromonas += d/mejor.apitidu;   


La dilusion es igual
for
	for
	aristas[i][j].feroonas *=(1-p);
COnverge rapido


solo se agrega feromonas en las arists del tour

-----------------------------------------------------------------
for 
	for
		sumProb+= math.ow(TSP_ACO.aristas[i][j].feromonas, TSO_ACO.alfa) * math,pow(1/TSP_ACO.aristas[i][j].distancia, TSP_ACO.beta)

i es la ciudad donde ya esaos y j son las candidatas

las probailidades estan entre 0 y 1
Alpha = beta= 2

en caso que la ciudad j no halla estado considerado se scaba la formiluta de las feromonas se aplica la formula
math.ow(TSP_ACO.aristas[i][j].feromonas, TSO_ACO.alfa) * math,pow(1/TSP_ACO.aristas[i][j].distancia, TSP_ACO.beta)/sumProb

------------------------------------------------------------------



*cantidad de feromonas iniciales
*deposito de feromonas a todas los caminos          constante q / recorrido total del tour
*probabiliadades normalizadas
*alfa y beta
